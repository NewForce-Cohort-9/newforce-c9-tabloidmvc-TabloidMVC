@model IEnumerable<TabloidMVC.Models.Comment>

@{
    ViewData["Title"] = "Index";
}

<h1>Comments</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Post.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProfile.DisplayName) <!--Comment has UserProfile object and you can use that to get DisplayName-->
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDateTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Post.Title)*@ <!--Instead of just displaying Title have a link back to post by clicking Title-->
                   <!--This is the format:-->@* @Html.ActionLink(linkText, actionName, controllerName, routeValues, htmlAttributes)*@
                   @Html.ActionLink(item.Post.Title, "Details", "Post", new { id = item.PostId })
                    <!--This means link is :Post title, it goes to Details page, Detail's in Post Controller, link will have route parameter PostId which specifies which specific post's details page-->
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserProfile.DisplayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDateTime)
            </td>
            <td>        
                @Html.ActionLink("Edit", "Edit", new {  id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>








